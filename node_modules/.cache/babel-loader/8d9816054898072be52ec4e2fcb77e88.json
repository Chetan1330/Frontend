{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/Histogram/HistogramChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addStock } from '../../redux/StockSlice2'; // const x = [];\n// for (let index = 0; index < 500; index++) {\n//   x[index] = Math.random();\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HistogramChart = () => {\n  _s();\n\n  const [dailyreturnsportf, setdailyreturnsportf] = useState(null);\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  useEffect(() => {\n    const id = user === null || user === void 0 ? void 0 : user.sub.split('|')[1];\n    console.log('ID====>', id);\n    axios.get(`http://127.0.0.1:8000/datalist1/${id}`).then(response => {\n      console.log('First Api Response', response.data);\n      setdailyreturnsportf(response.data.dailyreturnsportf); // Stockn = response.data.stockNames;\n      // response.data.forEach((stock) => dispatch(addStock(stock)));\n    }, error => {\n      console.log('Error', error);\n    });\n  }, []);\n  const trace = {\n    // x: x,\n    // x: [1, 2, 3, 7, 13, 24, 20, 32],\n    x: dailyreturnsportf,\n    // x: [-9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 0, 9],\n    // y: [1, 4, 4, 7, 13, 24, 20, 32, 42, 41, 27, 23, 17, 12, 3, 4, 2, 0, 2],\n    // y: [-9, -8, -7, -6, -5, -2, -2],\n    // z: [1],\n    type: 'histogram',\n    marker: {\n      color: '#2E8B57'\n    } // histnorm: 'probability',\n\n  };\n  const data = [trace];\n  const layout = {\n    width: 550,\n    height: 550,\n    // bargap: 0.05,\n    // bargroupgap: 0.2,\n    barmode: 'overlay',\n    title: 'Histogram',\n    xaxis: {\n      title: 'Returns'\n    },\n    yaxis: {\n      title: 'Count of returns'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: data,\n          layout: layout // layout={{ width: 500, height: 500, title: 'How you have split your investment across companies' }}\n          ,\n          className: \"mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HistogramChart, \"icqTSBEVSSjYGhPK104HIx9niqI=\", false, function () {\n  return [useAuth0];\n});\n\n_c = HistogramChart;\nexport default HistogramChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistogramChart\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","Col","Row","Plot","useSelector","useDispatch","axios","useAuth0","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","selectStocks2","addStock","HistogramChart","dailyreturnsportf","setdailyreturnsportf","user","isAuthenticated","id","sub","split","console","log","get","then","response","data","error","trace","x","type","marker","color","layout","width","height","barmode","title","xaxis","yaxis"],"sources":["/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/Histogram/HistogramChart.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {\n  BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend,\n}\nfrom 'recharts';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addStock } from '../../redux/StockSlice2';\n\n// const x = [];\n// for (let index = 0; index < 500; index++) {\n//   x[index] = Math.random();\n// }\nconst HistogramChart = () => {\n  const [dailyreturnsportf, setdailyreturnsportf] = useState(null);\n  const { user, isAuthenticated } = useAuth0();\n  useEffect(() => {\n    const id = user?.sub.split('|')[1];\n    console.log('ID====>', id);\n    axios.get(`http://127.0.0.1:8000/datalist1/${id}`)\n      .then((response) => {\n        console.log('First Api Response', response.data);\n        setdailyreturnsportf(response.data.dailyreturnsportf);\n        // Stockn = response.data.stockNames;\n        // response.data.forEach((stock) => dispatch(addStock(stock)));\n      }, (error) => {\n        console.log('Error', error);\n      });\n  }, []);\n  const trace = {\n    // x: x,\n    // x: [1, 2, 3, 7, 13, 24, 20, 32],\n    x: dailyreturnsportf,\n    // x: [-9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 0, 9],\n    // y: [1, 4, 4, 7, 13, 24, 20, 32, 42, 41, 27, 23, 17, 12, 3, 4, 2, 0, 2],\n    // y: [-9, -8, -7, -6, -5, -2, -2],\n    // z: [1],\n    type: 'histogram',\n    marker: {\n      color: '#2E8B57',\n    },\n    // histnorm: 'probability',\n  };\n  const data = [trace];\n  const layout = {\n    width: 550,\n    height: 550,\n    // bargap: 0.05,\n    // bargroupgap: 0.2,\n    barmode: 'overlay',\n    title: 'Histogram',\n    xaxis: { title: 'Returns' },\n    yaxis: { title: 'Count of returns' },\n  };\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {/* <h6 className=\"text-center mt-5\">Histogram</h6> */}\n          <Plot\n            data={data}\n            layout={layout}\n            // layout={{ width: 500, height: 500, title: 'How you have split your investment across companies' }}\n            className=\"mx-auto\"\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default HistogramChart;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,aADjB,EACgCC,KADhC,EACuCC,KADvC,EAC8CC,OAD9C,EACuDC,MADvD,QAGK,UAHL;AAIA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB,C,CAEA;AACA;AACA;AACA;;;;AACA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,CAAC,IAAD,CAA1D;EACA,MAAM;IAAEqB,IAAF;IAAQC;EAAR,IAA4Bd,QAAQ,EAA1C;EACAT,SAAS,CAAC,MAAM;IACd,MAAMwB,EAAE,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,GAAN,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAX;IACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,EAAvB;IACAhB,KAAK,CAACqB,GAAN,CAAW,mCAAkCL,EAAG,EAAhD,EACGM,IADH,CACSC,QAAD,IAAc;MAClBJ,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,QAAQ,CAACC,IAA3C;MACAX,oBAAoB,CAACU,QAAQ,CAACC,IAAT,CAAcZ,iBAAf,CAApB,CAFkB,CAGlB;MACA;IACD,CANH,EAMMa,KAAD,IAAW;MACZN,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,KAArB;IACD,CARH;EASD,CAZQ,EAYN,EAZM,CAAT;EAaA,MAAMC,KAAK,GAAG;IACZ;IACA;IACAC,CAAC,EAAEf,iBAHS;IAIZ;IACA;IACA;IACA;IACAgB,IAAI,EAAE,WARM;IASZC,MAAM,EAAE;MACNC,KAAK,EAAE;IADD,CATI,CAYZ;;EAZY,CAAd;EAcA,MAAMN,IAAI,GAAG,CAACE,KAAD,CAAb;EACA,MAAMK,MAAM,GAAG;IACbC,KAAK,EAAE,GADM;IAEbC,MAAM,EAAE,GAFK;IAGb;IACA;IACAC,OAAO,EAAE,SALI;IAMbC,KAAK,EAAE,WANM;IAObC,KAAK,EAAE;MAAED,KAAK,EAAE;IAAT,CAPM;IAQbE,KAAK,EAAE;MAAEF,KAAK,EAAE;IAAT;EARM,CAAf;EAUA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,uBAEE,QAAC,IAAD;UACE,IAAI,EAAEX,IADR;UAEE,MAAM,EAAEO,MAFV,CAGE;UAHF;UAIE,SAAS,EAAC;QAJZ;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAxDD;;GAAMpB,c;UAE8BV,Q;;;KAF9BU,c;AAyDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}