{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/StackedChart/StackedChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addMarket } from '../../redux/MarketC';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  type: 'bar',\n  options: {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked'\n      }\n    },\n    responsive: true,\n    interaction: {\n      intersect: false\n    },\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true,\n        suggestedMin: 0,\n        suggestedMax: 100\n      }\n    }\n  }\n};\n\nconst StackedChart = () => {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [dataArray, setDataArray] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    market\n  } = useSelector(state => state.third); // useEffect(() => {\n  //   console.log('dataArray', dataArray);\n  // }, [dataArray]);\n\n  const [sendData, setSendData] = useState([]);\n  const [seriess, setSeriess] = useState([]); // useEffect(() => {\n  //   axios.get('http://localhost:8000/marketcomparison').then(\n  //     (response) => {\n  //       response.data.forEach((m) => dispatch(addMarket(m)));\n  //       setSendData([]);\n  //       response?.data?.map((value) => {\n  //         const final = {};\n  //         Object.entries(value)?.map(([key, val]) => {\n  //           if (!key.includes('GSPC Volume') || !val === 0) {\n  //             final[key] = val;\n  //           }\n  //           return val;\n  //         });\n  //         setSendData((e) => [...e, {\n  //           label: 'Popularity of colours',\n  //           data: final,\n  //           backgroundColor: [\n  //             'green',\n  //           ],\n  //           borderWidth: 1,\n  //           width: '100%',\n  //           height: '100%',\n  //         }]);\n  //         return value;\n  //       });\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     },\n  //   );\n  // }, []);\n  // const data = {\n  //   labels: [],\n  //   datasets: sendData,\n  // };\n\n  const trace1 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [2552.53010365, -13.13085188, -64.04049154],\n    name: 'PercentAR',\n    type: 'bar'\n  };\n  const trace2 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [20.2457088, -11.88017611, -13.85107182],\n    name: 'SP500',\n    type: 'bar'\n  };\n  const trace3 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [17.28791727, -13.87287414, -15.27580145],\n    name: 'W5000',\n    type: 'bar'\n  };\n  const data = [trace1, trace2, trace3];\n  const layout = {\n    barmode: 'group'\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: data,\n          layout: layout // data={[\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [2552.53010365, -13.13085188, -64.04049154] },\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [20.2457088, -11.88017611, -13.85107182] },\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [17.28791727, -13.87287414, -15.27580145] },\n          // ]}\n          // layout={{ width: 400, barmode: 'group', title: 'A Fancy Plot' }}\n          ,\n          className: \"mx-auto px-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-8\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14px'\n          },\n          children: [\"The graph represents a comparison\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), \"between stocks returns and the market\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), \"return during the same time period,that is\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \"from the time of purchasing the stock untill\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), \"today.The indexes returns(Wilshire 5000\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), \"and S&P 500)are averages of all the returns\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), \"of the stocks being included in them. The\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), \"stock AAPL stands out for overperforming\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), \"the market,JNJ for underperforming the\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), \"market.If the US market registers a higher\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), \"return than your stock,it means that there\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), \"has been stocks in the same market that\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), \"have registered higher return than yours\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: [\"Note:The indexes used as a reference for the US market are\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), \"Wilshire 5000 and S&P 500\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackedChart, \"LOm5attxhhq+ANMKSKUgctSkAe4=\", false, function () {\n  return [useAuth0, useDispatch, useSelector];\n});\n\n_c = StackedChart;\nexport default StackedChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedChart\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","Col","Row","Bar","Plot","useSelector","useDispatch","axios","useAuth0","selectStocks2","addMarket","config","type","options","plugins","title","display","text","responsive","interaction","intersect","scales","x","stacked","y","suggestedMin","suggestedMax","StackedChart","user","isAuthenticated","dataArray","setDataArray","dispatch","market","state","third","sendData","setSendData","seriess","setSeriess","trace1","name","trace2","trace3","data","layout","barmode","fontSize"],"sources":["/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/StackedChart/StackedChart.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addMarket } from '../../redux/MarketC';\n\nconst config = {\n  type: 'bar',\n  options: {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n    },\n    responsive: true,\n    interaction: {\n      intersect: false,\n    },\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        suggestedMin: 0,\n        suggestedMax: 100,\n      },\n    },\n  },\n};\nconst StackedChart = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [dataArray, setDataArray] = useState([]);\n  const dispatch = useDispatch();\n  const { market } = useSelector((state) => state.third);\n  // useEffect(() => {\n  //   console.log('dataArray', dataArray);\n  // }, [dataArray]);\n  const [sendData, setSendData] = useState([]);\n  const [seriess, setSeriess] = useState([]);\n  // useEffect(() => {\n  //   axios.get('http://localhost:8000/marketcomparison').then(\n  //     (response) => {\n  //       response.data.forEach((m) => dispatch(addMarket(m)));\n  //       setSendData([]);\n  //       response?.data?.map((value) => {\n  //         const final = {};\n  //         Object.entries(value)?.map(([key, val]) => {\n  //           if (!key.includes('GSPC Volume') || !val === 0) {\n  //             final[key] = val;\n  //           }\n  //           return val;\n  //         });\n  //         setSendData((e) => [...e, {\n  //           label: 'Popularity of colours',\n  //           data: final,\n  //           backgroundColor: [\n  //             'green',\n  //           ],\n  //           borderWidth: 1,\n  //           width: '100%',\n  //           height: '100%',\n  //         }]);\n  //         return value;\n  //       });\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     },\n  //   );\n  // }, []);\n  // const data = {\n  //   labels: [],\n  //   datasets: sendData,\n  // };\n  const trace1 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [2552.53010365, -13.13085188, -64.04049154],\n    name: 'PercentAR',\n    type: 'bar',\n  };\n  const trace2 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [20.2457088, -11.88017611, -13.85107182],\n    name: 'SP500',\n    type: 'bar',\n  };\n  const trace3 = {\n    x: ['GME', 'AAPL', 'AMC'],\n    y: [17.28791727, -13.87287414, -15.27580145],\n    name: 'W5000',\n    type: 'bar',\n  };\n\n  const data = [trace1, trace2, trace3];\n\n  const layout = { barmode: 'group' };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"col-2\">\n          <Plot\n            data={data}\n            layout={layout}\n            // data={[\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [2552.53010365, -13.13085188, -64.04049154] },\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [20.2457088, -11.88017611, -13.85107182] },\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [17.28791727, -13.87287414, -15.27580145] },\n            // ]}\n            // layout={{ width: 400, barmode: 'group', title: 'A Fancy Plot' }}\n            className=\"mx-auto px-1\"\n          />\n        </Col>\n        <Col className=\"col-8\">\n\n          <p style={{ fontSize: '14px' }}>\n            The graph represents a comparison\n            <br />\n            between stocks returns and the market\n            <br />\n            return during the same time period,that is\n            <br />\n            from the time of purchasing the stock untill\n            <br />\n            today.The indexes returns(Wilshire 5000\n            <br />\n            and S&P 500)are averages of all the returns\n            <br />\n            of the stocks being included in them. The\n            <br />\n            stock AAPL stands out for overperforming\n            <br />\n            the market,JNJ for underperforming the\n            <br />\n            market.If the US market registers a higher\n            <br />\n            return than your stock,it means that there\n            <br />\n            has been stocks in the same market that\n            <br />\n            have registered higher return than yours\n            <br />\n            <br />\n            <p style={{ fontSize: '12px' }}>\n              Note:The indexes used as a reference for the US market are\n              <br />\n              Wilshire 5000 and S&P 500\n            </p>\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default StackedChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}