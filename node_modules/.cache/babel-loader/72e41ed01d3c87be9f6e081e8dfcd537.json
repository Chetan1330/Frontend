{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/Histogram/HistogramChart.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addStock } from '../../redux/StockSlice2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  user,\n  isAuthenticated\n} = useAuth0();\nconst [Stocknames, setstocknames] = useState(null); // const [dailyreturnsportf, setdailyreturnsportf] = useState(null);\n// useEffect(() => {\n//   const id = user?.sub.split('|')[1];\n//   console.log('ID====>', id);\n//   axios.get(`http://localhost:8000/datalist1/${id}`)\n//     .then((response) => {\n//       console.log('First Api Response', response.data);\n//       setdailyreturnsportf(response.data.dailyreturnsportf);\n//       // Stockn = response.data.stockNames;\n//       // response.data.forEach((stock) => dispatch(addStock(stock)));\n//     }, (error) => {\n//       console.log('Error', error);\n//     });\n// }, []);\n// const x = [];\n// for (let index = 0; index < 500; index++) {\n//   x[index] = Math.random();\n// }\n\nconst HistogramChart = () => {\n  const trace = {\n    // x: x,\n    // x: [1, 2, 3, 7, 13, 24, 20, 32],\n    // x: dailyreturnsportf,\n    x: [-9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 0, 9],\n    // y: [1, 4, 4, 7, 13, 24, 20, 32, 42, 41, 27, 23, 17, 12, 3, 4, 2, 0, 2],\n    // y: [-9, -8, -7, -6, -5, -2, -2],\n    // z: [1],\n    type: 'histogram' // histnorm: 'probability',\n\n  };\n  const data = [trace];\n  const layout = {\n    width: 550,\n    height: 550,\n    // bargap: 0.05,\n    // bargroupgap: 0.2,\n    barmode: 'overlay',\n    title: 'Histogram',\n    xaxis: {\n      title: 'Returns'\n    },\n    yaxis: {\n      title: 'Count of returns'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: data,\n          layout: layout // layout={{ width: 500, height: 500, title: 'How you have split your investment across companies' }}\n          ,\n          className: \"mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HistogramChart;\nexport default HistogramChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistogramChart\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","Col","Row","Plot","useSelector","useDispatch","axios","useAuth0","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","selectStocks2","addStock","user","isAuthenticated","Stocknames","setstocknames","HistogramChart","trace","x","type","data","layout","width","height","barmode","title","xaxis","yaxis"],"sources":["/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/Histogram/HistogramChart.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {\n  BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend,\n}\nfrom 'recharts';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addStock } from '../../redux/StockSlice2';\n\nconst { user, isAuthenticated } = useAuth0();\nconst [Stocknames, setstocknames] = useState(null);\n// const [dailyreturnsportf, setdailyreturnsportf] = useState(null);\n// useEffect(() => {\n//   const id = user?.sub.split('|')[1];\n//   console.log('ID====>', id);\n//   axios.get(`http://localhost:8000/datalist1/${id}`)\n//     .then((response) => {\n//       console.log('First Api Response', response.data);\n//       setdailyreturnsportf(response.data.dailyreturnsportf);\n//       // Stockn = response.data.stockNames;\n//       // response.data.forEach((stock) => dispatch(addStock(stock)));\n//     }, (error) => {\n//       console.log('Error', error);\n//     });\n// }, []);\n// const x = [];\n// for (let index = 0; index < 500; index++) {\n//   x[index] = Math.random();\n// }\nconst HistogramChart = () => {\n  const trace = {\n    // x: x,\n    // x: [1, 2, 3, 7, 13, 24, 20, 32],\n    // x: dailyreturnsportf,\n    x: [-9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 0, 9],\n    // y: [1, 4, 4, 7, 13, 24, 20, 32, 42, 41, 27, 23, 17, 12, 3, 4, 2, 0, 2],\n    // y: [-9, -8, -7, -6, -5, -2, -2],\n    // z: [1],\n    type: 'histogram',\n    // histnorm: 'probability',\n  };\n  const data = [trace];\n  const layout = {\n    width: 550,\n    height: 550,\n    // bargap: 0.05,\n    // bargroupgap: 0.2,\n    barmode: 'overlay',\n    title: 'Histogram',\n    xaxis: { title: 'Returns' },\n    yaxis: { title: 'Count of returns' },\n  };\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {/* <h6 className=\"text-center mt-5\">Histogram</h6> */}\n          <Plot\n            data={data}\n            layout={layout}\n            // layout={{ width: 500, height: 500, title: 'How you have split your investment across companies' }}\n            className=\"mx-auto\"\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default HistogramChart;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACEC,QADF,EACYC,GADZ,EACiBC,aADjB,EACgCC,KADhC,EACuCC,KADvC,EAC8CC,OAD9C,EACuDC,MADvD,QAGK,UAHL;AAIA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAM;EAAEC,IAAF;EAAQC;AAAR,IAA4BX,QAAQ,EAA1C;AACA,MAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,IAAD,CAA5C,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMsB,cAAc,GAAG,MAAM;EAC3B,MAAMC,KAAK,GAAG;IACZ;IACA;IACA;IACAC,CAAC,EAAE,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAC,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B,EAA6B,CAAC,CAA9B,EAAiC,CAAC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D,EAAgE,CAAhE,CAJS;IAKZ;IACA;IACA;IACAC,IAAI,EAAE,WARM,CASZ;;EATY,CAAd;EAWA,MAAMC,IAAI,GAAG,CAACH,KAAD,CAAb;EACA,MAAMI,MAAM,GAAG;IACbC,KAAK,EAAE,GADM;IAEbC,MAAM,EAAE,GAFK;IAGb;IACA;IACAC,OAAO,EAAE,SALI;IAMbC,KAAK,EAAE,WANM;IAObC,KAAK,EAAE;MAAED,KAAK,EAAE;IAAT,CAPM;IAQbE,KAAK,EAAE;MAAEF,KAAK,EAAE;IAAT;EARM,CAAf;EAUA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAA,uBAEE,QAAC,IAAD;UACE,IAAI,EAAEL,IADR;UAEE,MAAM,EAAEC,MAFV,CAGE;UAHF;UAIE,SAAS,EAAC;QAJZ;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAtCD;;KAAML,c;AAuCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}