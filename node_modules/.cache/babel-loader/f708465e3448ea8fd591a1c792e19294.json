{"ast":null,"code":"/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _isBetween, ah as _readValueToProps, ai as _updateBezierControlPoints, aj as _computeSegments, ak as _boundSegments, al as _steppedInterpolation, am as _bezierInterpolation, an as _pointInLine, ao as _steppedLineTo, ap as _bezierCurveTo, aq as drawPoint, ar as addRoundedRectPath, as as toTRBL, at as toTRBLCorners, au as _boundSegment, av as _normalizeAngle, aw as getRtlAdapter, ax as overrideTextDirection, ay as _textX, az as restoreTextDirection, aA as noop, aB as distanceBetweenPoints, aC as _setMinAndMaxByKey, aD as niceNum, aE as almostWhole, aF as almostEquals, aG as _decimalPlaces, aH as _longestText, aI as _filterBetween, aJ as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'x',\n        intersect: options.intersect\n      }, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'y',\n        intersect: options.intersect\n      }, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.6.2\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n\n    this._lastEvent = null;\n\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref3 => {\n    let {\n      start,\n      end\n    } = _ref3;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this._chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = this._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref5) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref5;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = this.height - this.paddingTop - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor((maxLeft + maxRight) / 2 + this.left);\n    this.yCenter = Math.floor((maxTop + maxBottom) / 2 + this.top + this.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","toPadding","C","each","D","getMaximumSize","E","_getParentNode","F","readUsedSize","G","throttled","I","supportsEventListenerOptions","J","_isDomSupported","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","clipArea","W","renderText","X","unclipArea","Y","toFont","Z","_toLeftRightCenter","$","_alignStartEnd","a0","overrides","a1","merge","a2","_capitalize","a3","descriptors","a4","isFunction","a5","_attachContext","a6","_createResolver","a7","_descriptors","a8","mergeIf","a9","uid","aa","debounce","ab","retinaScale","ac","clearCanvas","ad","setsEqual","ae","_elementsEqual","af","getAngleFromPoint","ag","_isBetween","ah","_readValueToProps","ai","_updateBezierControlPoints","aj","_computeSegments","ak","_boundSegments","al","_steppedInterpolation","am","_bezierInterpolation","an","_pointInLine","ao","_steppedLineTo","ap","_bezierCurveTo","aq","drawPoint","ar","addRoundedRectPath","as","toTRBL","at","toTRBLCorners","au","_boundSegment","av","_normalizeAngle","aw","getRtlAdapter","ax","overrideTextDirection","ay","_textX","az","restoreTextDirection","aA","noop","aB","distanceBetweenPoints","aC","_setMinAndMaxByKey","aD","niceNum","aE","almostWhole","aF","almostEquals","aG","_decimalPlaces","aH","_longestText","aI","_filterBetween","aJ","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/home/chetan/Desktop/Projects/Project developer/Frontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _isBetween, ah as _readValueToProps, ai as _updateBezierControlPoints, aj as _computeSegments, ak as _boundSegments, al as _steppedInterpolation, am as _bezierInterpolation, an as _pointInLine, ao as _steppedLineTo, ap as _bezierCurveTo, aq as drawPoint, ar as addRoundedRectPath, as as toTRBL, at as toTRBLCorners, au as _boundSegment, av as _normalizeAngle, aw as getRtlAdapter, ax as overrideTextDirection, ay as _textX, az as restoreTextDirection, aA as noop, aB as distanceBetweenPoints, aC as _setMinAndMaxByKey, aD as niceNum, aE as almostWhole, aF as almostEquals, aG as _decimalPlaces, aH as _longestText, aI as _filterBetween, aJ as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}