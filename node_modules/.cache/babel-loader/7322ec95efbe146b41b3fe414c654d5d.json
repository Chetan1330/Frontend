{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/StackedChart/StackedChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addMarket } from '../../redux/MarketC';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  type: 'bar',\n  options: {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked'\n      }\n    },\n    responsive: true,\n    interaction: {\n      intersect: false\n    },\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true,\n        suggestedMin: 0,\n        suggestedMax: 100\n      }\n    }\n  }\n};\n\nconst StackedChart = () => {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [dataArray, setDataArray] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    market\n  } = useSelector(state => state.third); // useEffect(() => {\n  //   console.log('dataArray', dataArray);\n  // }, [dataArray]);\n\n  const [sendData, setSendData] = useState([]);\n  const [seriess, setSeriess] = useState([]);\n  const [Stocknames, setstocknames] = useState(null);\n  const [PercentARlistt, setPercentARlistt] = useState(null);\n  const [SP500listt, setSP500listt] = useState(null);\n  const [W5000listt, setW5000listt] = useState(null);\n  useEffect(() => {\n    const id = user === null || user === void 0 ? void 0 : user.sub.split('|')[1];\n    console.log('ID====>', id);\n    axios.get(`http://localhost:8000/datalist1/${id}`).then(response => {\n      console.log('First Api Response', response.data);\n      setstocknames(response.data.stockNames);\n      setPercentARlistt(response.data.PercentARlistt);\n      setSP500listt(response.data.SP500listt);\n      setW5000listt(response.data.W5000listt); // Stockn = response.data.stockNames;\n      // response.data.forEach((stock) => dispatch(addStock(stock)));\n    }, error => {\n      console.log('Error', error);\n    });\n  }, []); // useEffect(() => {\n  //   axios.get('http://localhost:8000/marketcomparison').then(\n  //     (response) => {\n  //       response.data.forEach((m) => dispatch(addMarket(m)));\n  //       setSendData([]);\n  //       response?.data?.map((value) => {\n  //         const final = {};\n  //         Object.entries(value)?.map(([key, val]) => {\n  //           if (!key.includes('GSPC Volume') || !val === 0) {\n  //             final[key] = val;\n  //           }\n  //           return val;\n  //         });\n  //         setSendData((e) => [...e, {\n  //           label: 'Popularity of colours',\n  //           data: final,\n  //           backgroundColor: [\n  //             'green',\n  //           ],\n  //           borderWidth: 1,\n  //           width: '100%',\n  //           height: '100%',\n  //         }]);\n  //         return value;\n  //       });\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     },\n  //   );\n  // }, []);\n  // const data = {\n  //   labels: [],\n  //   datasets: sendData,\n  // };\n  // const trace1 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-41.94451827, -42.15744544, -66.93241028, -46.00072058],\n  //   name: 'PercentAR',\n  //   type: 'bar',\n  // };\n  // const trace2 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-12.67787156, -10.37538798, -13.32253041, -8.25908878],\n  //   name: 'SP500',\n  //   type: 'bar',\n  // };\n  // const trace3 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-14.01023064, -11.35558404, -17.11559793, -12.46281232],\n  //   name: 'W5000',\n  //   type: 'bar',\n  // };\n\n  const trace1 = {\n    x: Stocknames,\n    y: SP500listt,\n    name: 'Stock',\n    type: 'bar',\n    marker_color: 'beige'\n  };\n  const trace2 = {\n    x: Stocknames,\n    y: SP500listt,\n    name: 'SP500',\n    type: 'bar',\n    marker_color: 'darkseagreen'\n  };\n  const trace3 = {\n    x: Stocknames,\n    y: W5000listt,\n    name: 'W5000',\n    type: 'bar',\n    marker_color: 'seagreen'\n  };\n  const data = [trace1, trace2, trace3];\n  const layout = {\n    width: 600,\n    height: 540,\n    barmode: 'group'\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Plot, {\n          data: data,\n          layout: layout // data={[\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [2552.53010365, -13.13085188, -64.04049154] },\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [20.2457088, -11.88017611, -13.85107182] },\n          //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [17.28791727, -13.87287414, -15.27580145] },\n          // ]}\n          // layout={{ width: 400, barmode: 'group', title: 'A Fancy Plot' }}\n          ,\n          className: \"mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackedChart, \"lNFKM9qJXX6uxx9indmVMD1CFLU=\", false, function () {\n  return [useAuth0, useDispatch, useSelector];\n});\n\n_c = StackedChart;\nexport default StackedChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackedChart\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Container","Col","Row","Bar","Plot","useSelector","useDispatch","axios","useAuth0","selectStocks2","addMarket","config","type","options","plugins","title","display","text","responsive","interaction","intersect","scales","x","stacked","y","suggestedMin","suggestedMax","StackedChart","user","isAuthenticated","dataArray","setDataArray","dispatch","market","state","third","sendData","setSendData","seriess","setSeriess","Stocknames","setstocknames","PercentARlistt","setPercentARlistt","SP500listt","setSP500listt","W5000listt","setW5000listt","id","sub","split","console","log","get","then","response","data","stockNames","error","trace1","name","marker_color","trace2","trace3","layout","width","height","barmode"],"sources":["/home/chetan/Desktop/Projects/Project developer/Frontend/src/Components/StackedChart/StackedChart.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport Plot from 'react-plotly.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { selectStocks2 } from '../../redux/ConfigureStore';\nimport { addMarket } from '../../redux/MarketC';\n\nconst config = {\n  type: 'bar',\n  options: {\n    plugins: {\n      title: {\n        display: true,\n        text: 'Chart.js Bar Chart - Stacked',\n      },\n    },\n    responsive: true,\n    interaction: {\n      intersect: false,\n    },\n    scales: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true,\n        suggestedMin: 0,\n        suggestedMax: 100,\n      },\n    },\n  },\n};\nconst StackedChart = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [dataArray, setDataArray] = useState([]);\n  const dispatch = useDispatch();\n  const { market } = useSelector((state) => state.third);\n  // useEffect(() => {\n  //   console.log('dataArray', dataArray);\n  // }, [dataArray]);\n  const [sendData, setSendData] = useState([]);\n  const [seriess, setSeriess] = useState([]);\n\n  const [Stocknames, setstocknames] = useState(null);\n  const [PercentARlistt, setPercentARlistt] = useState(null);\n  const [SP500listt, setSP500listt] = useState(null);\n  const [W5000listt, setW5000listt] = useState(null);\n  useEffect(() => {\n    const id = user?.sub.split('|')[1];\n    console.log('ID====>', id);\n    axios.get(`http://localhost:8000/datalist1/${id}`)\n      .then((response) => {\n        console.log('First Api Response', response.data);\n        setstocknames(response.data.stockNames);\n        setPercentARlistt(response.data.PercentARlistt);\n        setSP500listt(response.data.SP500listt);\n        setW5000listt(response.data.W5000listt);\n        // Stockn = response.data.stockNames;\n        // response.data.forEach((stock) => dispatch(addStock(stock)));\n      }, (error) => {\n        console.log('Error', error);\n      });\n  }, []);\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:8000/marketcomparison').then(\n  //     (response) => {\n  //       response.data.forEach((m) => dispatch(addMarket(m)));\n  //       setSendData([]);\n  //       response?.data?.map((value) => {\n  //         const final = {};\n  //         Object.entries(value)?.map(([key, val]) => {\n  //           if (!key.includes('GSPC Volume') || !val === 0) {\n  //             final[key] = val;\n  //           }\n  //           return val;\n  //         });\n  //         setSendData((e) => [...e, {\n  //           label: 'Popularity of colours',\n  //           data: final,\n  //           backgroundColor: [\n  //             'green',\n  //           ],\n  //           borderWidth: 1,\n  //           width: '100%',\n  //           height: '100%',\n  //         }]);\n  //         return value;\n  //       });\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     },\n  //   );\n  // }, []);\n  // const data = {\n  //   labels: [],\n  //   datasets: sendData,\n  // };\n  // const trace1 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-41.94451827, -42.15744544, -66.93241028, -46.00072058],\n  //   name: 'PercentAR',\n  //   type: 'bar',\n  // };\n  // const trace2 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-12.67787156, -10.37538798, -13.32253041, -8.25908878],\n  //   name: 'SP500',\n  //   type: 'bar',\n  // };\n  // const trace3 = {\n  //   x: ['AMZN', 'TSLA', 'PYPL', 'BABA'],\n  //   y: [-14.01023064, -11.35558404, -17.11559793, -12.46281232],\n  //   name: 'W5000',\n  //   type: 'bar',\n  // };\n  const trace1 = {\n    x: Stocknames,\n    y: SP500listt,\n    name: 'Stock',\n    type: 'bar',\n    marker_color: 'beige',\n  };\n  const trace2 = {\n    x: Stocknames,\n    y: SP500listt,\n    name: 'SP500',\n    type: 'bar',\n    marker_color: 'darkseagreen',\n  };\n  const trace3 = {\n    x: Stocknames,\n    y: W5000listt,\n    name: 'W5000',\n    type: 'bar',\n    marker_color: 'seagreen',\n  };\n\n  const data = [trace1, trace2, trace3];\n\n  const layout = { width: 600, height: 540, barmode: 'group' };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Plot\n            data={data}\n            layout={layout}\n            // data={[\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [2552.53010365, -13.13085188, -64.04049154] },\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [20.2457088, -11.88017611, -13.85107182] },\n            //   { type: 'bar', x: ['GME', 'AAPL', 'AMC'], y: [17.28791727, -13.87287414, -15.27580145] },\n            // ]}\n            // layout={{ width: 400, barmode: 'group', title: 'A Fancy Plot' }}\n            className=\"mx-auto\"\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default StackedChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}